#!/bin/bash -ue

mouse_alt="/tmp/mouse-alt"
hyperscroll="/tmp/hyperscroll"
keyboard_mouse="/tmp/keyboard-mouse"


#------------------------------------------------------------------------------
# Helpers
#------------------------------------------------------------------------------
switch-keyd-profile() {
    conf_dir="$HOME/.config/keyd"
    profile_dir="$conf_dir/scenarios/$1"
    if [ -d $profile_dir ]; then
        rm $conf_dir/*.conf
        ln -s $profile_dir/* $conf_dir
        keyd reload
    fi
}

activate-mouse-mode() {
    mode=$1
    cat /etc/keyd/mouse/bind/$1 | xargs keyd bind reset
}

bind-mouse-hotkeys() {
    if [ -f $mouse_alt ]; then
        activate-mouse-mode alt
    else
        if [ -f $hyperscroll ]; then
            activate-mouse-mode hyperscroll
        else
            activate-mouse-mode normalscroll
        fi
    fi
}


#------------------------------------------------------------------------------
# Mouse mode and hyperscroll
#------------------------------------------------------------------------------
reset-mouse-notification() {
    # Keyboard and mouse goes to default layer
    [ -f $mouse_alt      ] && rm  $mouse_alt      && notify-send.sh --close=10
    [ -f $hyperscroll    ] && rm  $hyperscroll    && notify-send.sh --close=10
    [ -f $keyboard_mouse ] && rm  $keyboard_mouse && notify-send.sh --close=12
    :
}

mouse-notification() {
    if [ -f $mouse_alt ]; then
        notify-send.sh -t 0 -r 10 -u low "Alt"
    elif [ -f $hyperscroll ]; then
        notify-send.sh -t 0 -r 10 -u low "Hyperscroll"
    else
        notify-send.sh --close=10
    fi
}

mouse-mode() {
    mode=$1
    if [ $mode = "normal" ]; then
        [ -f $mouse_alt ] && rm $mouse_alt
    else
        touch $mouse_alt
    fi
    mouse-notification
    bind-mouse-hotkeys
}

toggle-mouse-mode() { [ -f $mouse_alt ] && mouse-mode normal || mouse-mode alt; }
is-mouse-alt     () { [ -f $mouse_alt ]; }


scroll-mode() {
    mode=$1
    if [ $mode = "normal" ]; then
        [ -f $hyperscroll ] && rm $hyperscroll
    else
        touch $hyperscroll
    fi
    mouse-notification
    bind-mouse-hotkeys
}

toggle-hyperscroll() { [ -f $hyperscroll ] && scroll-mode normal || scroll-mode hyper; }
is-hyperscroll    () { [ -f $hyperscroll ]; }


#------------------------------------------------------------------------------
# Keyboard mode and Mousekey (keyboard-mouse)
#------------------------------------------------------------------------------
# Alternate method: https://linuxreviews.org/HOWTO_use_the_numeric_keyboard_keys_as_mouse_in_XOrg
# This method is cumbersome when left/right clicking and enabling/disabling mousekey
keyboard-mouse() {
    case $1 in
        "on")
            touch $keyboard_mouse
            xkbset m # Enable mousekey. Once enabled. There is no way to disable through xkbset
            xmodmap ~/.config/Xmodmap/keyboard-mouse
            notify-send.sh -t 0 -r 12 -u critical Mousekey Enabled
            ;;
        "off")
            rm $keyboard_mouse
            xmodmap ~/.config/Xmodmap/keyboard
            notify-send.sh --close=12 # notify-send.sh supports expiration time and closing notifications (https://askubuntu.com/questions/110969/notify-send-ignores-timeout)
            ;;
        "toggle")
            if [ -f $keyboard_mouse ]; then
                keyboard-mouse off
            else
                keyboard-mouse on
            fi
            ;;
    esac
}

game-mode() {
    switch-keyd-profile game
}


#------------------------------------------------------------------------------
# Main
#------------------------------------------------------------------------------
# Remove all alt mode and rebind hotkeys
init() {
    # default keyboard and mouse profiles
    switch-keyd-profile default

    # load normal scroll bindings
    reset-mouse-notification
    bind-mouse-hotkeys
}

if [ $# == 0 ]; then
    init
else
    $@
fi


#------------------------------------------------------------------------------
# Legacy
#------------------------------------------------------------------------------
