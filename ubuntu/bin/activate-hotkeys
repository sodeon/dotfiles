#!/bin/bash -ue

mouse_alt="/tmp/mouse-alt"
hyperscroll="/tmp/hyperscroll"
keyboard_alt="/tmp/keyboard-alt"
keyboard_mouse="/tmp/keyboard-mouse"


#------------------------------------------------------------------------------
# Keymap definitions
#------------------------------------------------------------------------------
swap-esc-grave()              { xmodmap ~/.config/Xmodmap/swap-esc-grave;              }
default-esc-grave()           { xmodmap ~/.config/Xmodmap/default-esc-grave;           }
right-ctrl-os-as-right-left() { xmodmap ~/.config/Xmodmap/right-ctrl-os-as-right-left; }
default-right-ctrl-os()       { xmodmap ~/.config/Xmodmap/default-right-ctrl-os;       }

setup-keymap() {
    # Keyboard and mouse goes to default layer
    [ -f $mouse_alt      ] && rm  $mouse_alt      && notify-send.sh --close=10
    [ -f $keyboard_alt   ] && rm  $keyboard_alt   && notify-send.sh --close=11
    [ -f $keyboard_mouse ] && rm  $keyboard_mouse && notify-send.sh --close=12

    # Grave esc swap
    if xinput --list --short | grep -q \
        -e "SN TECH" \
        -e "SINO WEALTH" \
        -e "EK820" \
        -e "SONiX USB DEVICE Keyboard" \
        -e "RK-G68" \
        -e "Akko keyboard"; then # Dareu EK820, RoyalKludge RK68 and Rapoo V860-61
        swap-esc-grave
    else
        default-esc-grave
    fi
}


#------------------------------------------------------------------------------
# Dual-keys (bind-dualkeys) and proxy keys (bind-hotkeys)
#------------------------------------------------------------------------------
bind-dualkeys() {
    input-remapper-control --command autoload
    systemctl --user restart evcape
}

bind-hotkeys() {
    [[ ! ${XDG_CURRENT_DESKTOP:-} || $XDG_CURRENT_DESKTOP != "i3" ]] && return

    if [ -f $mouse_alt ]; then
        i3-msg -q "mode Alt"
    else
        if [ -f $hyperscroll ]; then
            i3-msg -q "mode Hyperscroll"
        else
            i3-msg -q "mode default"
        fi
    fi
}


#------------------------------------------------------------------------------
# Mouse mode and hyperscroll
#------------------------------------------------------------------------------
mouse-notification() {
    if [ -f $mouse_alt ]; then
        notify-send.sh -t 0 -r 10 -u low "Alt"
        # notify-send.sh --close=13
    else
        notify-send.sh --close=10 # notify-send.sh supports expiration time and closing notifications (https://askubuntu.com/questions/110969/notify-send-ignores-timeout)
        # if [ -f $hyperscroll ]; then
        #     notify-send.sh -t 0 -r 13 -u normal Hyperscroll
        # else
        #     notify-send.sh --close=13
        # fi
    fi
}

mouse-mode() {
    mode=$1
    if [ $mode = "normal" ]; then
        [ -f $mouse_alt ] && rm $mouse_alt
    else
        touch $mouse_alt
    fi
    mouse-notification

    bind-hotkeys
}

toggle-mouse-mode() { [ -f $mouse_alt ] && mouse-mode normal || mouse-mode alt; }
is-mouse-alt     () { [ -f $mouse_alt   ]; }


scroll-mode() {
    mode=$1
    if [ $mode = "normal" ]; then
        [ -f $hyperscroll ] && rm $hyperscroll
    else
        touch $hyperscroll
    fi
    mouse-notification

    bind-hotkeys
}

toggle-hyperscroll() { [ -f $hyperscroll ] && scroll-mode normal || scroll-mode hyper; }
is-hyperscroll    () { [ -f $hyperscroll ]; }


#------------------------------------------------------------------------------
# Keyboard mode and Mousekey (keyboard-mouse)
#------------------------------------------------------------------------------
# Alternate method: https://linuxreviews.org/HOWTO_use_the_numeric_keyboard_keys_as_mouse_in_XOrg
# This method is cumbersome when left/right clicking and enabling/disabling mousekey
keyboard-mouse() {
    case $1 in
        "on")
            touch $keyboard_mouse
            xkbset m # Enable mousekey. Once enabled. There is no way to disable through xkbset
            xmodmap ~/.config/Xmodmap/keyboard-mouse
            notify-send.sh -t 0 -r 12 -u critical Mousekey Enabled
            ;;
        "off")
            rm $keyboard_mouse
            xmodmap ~/.config/Xmodmap/keyboard
            notify-send.sh --close=12 # notify-send.sh supports expiration time and closing notifications (https://askubuntu.com/questions/110969/notify-send-ignores-timeout)
            ;;
        "toggle")
            if [ -f $keyboard_mouse ]; then
                keyboard-mouse off
            else
                keyboard-mouse on
            fi
            ;;
    esac
}

# toggle-keyboard-alt() {
#     if [ -f $keyboard_alt ]; then # Default layer
#         rm $keyboard_alt
#         xmodmap ~/.Xmodmap
#         notify-send.sh --close=11
#     else # Alternate layer (layer1)
#         touch $keyboard_alt
#         xmodmap ~/.config/Xmodmap/layer1
#         notify-send.sh -t 0 -r 11 -u critical "Layer 1" Keyboard
#     fi
# }

game-mode() {
    input-remapper-control --command stop-all
    systemctl --user stop evcape

    i3-msg -q "mode Game"
}


#------------------------------------------------------------------------------
# Main
#------------------------------------------------------------------------------
setup-keyboard() {
    setup-keymap
    bind-dualkeys
}

# Remove all alt mode and rebind hotkeys
init() {
    setup-keymap
    bind-dualkeys

    # Setup one time
    bind-hotkeys
}

if [ $# == 0 ]; then
    init
else
    $@
fi


#------------------------------------------------------------------------------
# Legacy
#------------------------------------------------------------------------------
