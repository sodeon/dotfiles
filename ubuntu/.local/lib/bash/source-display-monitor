#!/bin/bash -ue
cached_spec=/tmp/display1

# Force re-generate display information regardless of cache
[ $# -eq 1 ] && [[ $1 == "-f" ]] && rm -f $cached_spec

# If cached spec exist, use it.
if [ -f $cached_spec ]; then
    source $cached_spec
    source ~/.config/hardware/"$model"
    return 0
fi

# Read panel model information and cache it for later use
read-display-connection() {
    local ddc_info="`ddcutil detect`"

    model=`echo "$ddc_info" | grep "Model:" | awk '{print $2}'`
    # model=`echo "$ddc_info" | grep "Model:" | awk '{print $NF}'`
    i2c_bus=`echo "$ddc_info" | grep "I2C bus" | awk '{print $NF}' | sed 's/.*-//'`
}

read-monitor-spec() { 
    local xrandr_info=`xrandr` # Store xrandr result for more intormation parsing
    interface=`echo "$xrandr_info" | grep -w connected | awk '{print $1}'`

    [ -f ~/.config/hardware/"$model" ] && source ~/.config/hardware/"$model" || return 1; 
}

cache-display-spec() {
    echo "model=\"$model\"
    i2c_bus=$i2c_bus" > $cached_spec
    echo "interface=$interface" >> $cached_spec
}


setup-xresources-and-env() {
    # [[ ! $XDG_CURRENT_DESKTOP == "i3" ]] && return 0 # This script already should only be used in i3 environment. Other desktop environment has its own display monitor configurations.
    if [[ ${is_high_dpi-""} == "true" ]]; then
        dpi_xresources="/tmp/Xresources.dpi"
        echo "
            Xft.dpi: 180
            Xcursor.size: 32
            rofi.dpi: 180
        " > $dpi_xresources
        xrdb -merge $dpi_xresources
        export GDK_SCALE=2       # UI element scaling
        export GDK_DPI_SCALE=0.5 # font scaling
        export QT_AUTO_SCREEN_SET_FACTOR=0
        export QT_SCALE_FACTOR=2
        export QT_FONT_DPI=92
        # 1.5 mangification. Good quality. Low GPU demand with 5K rendering.
        # echo "
        #     Xft.dpi: 214
        #     Xcursor.size: 54
        #     rofi.dpi: 214
        # " > $dpi_xresources
        # xrdb -merge $dpi_xresources
        # export GDK_SCALE=2       # UI element scaling
        # export GDK_DPI_SCALE=0.5 # font scaling
        # export QT_AUTO_SCREEN_SET_FACTOR=0
        # export QT_SCALE_FACTOR=2
        # export QT_FONT_DPI=112
        # 1.5 magnification. Great quality. High GPU demand with 8K rendering.
        # echo "
        #     Xft.dpi: 320
        #     Xcursor.size: 80
        #     rofi.dpi: 320
        # " > $dpi_xresources
        # xrdb -merge $dpi_xresources
        # export GDK_SCALE=3       # UI element scaling
        # export GDK_DPI_SCALE=0.33 # font scaling
        # export QT_AUTO_SCREEN_SET_FACTOR=0
        # export QT_SCALE_FACTOR=3
        # export QT_FONT_DPI=104
    elif [ ${QT_SCALE_FACTOR-0} -eq 2 ]; then # Only modify X resources and environment variables when not in normal DPI
        dpi_xresources="/tmp/Xresources.dpi"
        echo "
            Xft.dpi: 96
            Xcursor.size: 64
            rofi.dpi: 96
        " > $dpi_xresources
        xrdb -merge $dpi_xresources
        export GDK_SCALE=1       # UI element scaling
        export GDK_DPI_SCALE=1   # font scaling
        export QT_AUTO_SCREEN_SET_FACTOR=0
        export QT_SCALE_FACTOR=1
        export QT_FONT_DPI=96
    fi
}

exec-xrandr() {
    local cmd="xrandr --output $interface --mode $resolution --scale $scale --rate $refresh_rate"
    eval $cmd
}

model=""
i2c_bus=""
interface=""
read-display-connection && read-monitor-spec && cache-display-spec || return 1
# exec-xrandr


#------------------------------------------------------------------------------
# Legacy
#------------------------------------------------------------------------------
# Description: If external display is connected, use external display only. If not, use internal display only
# NOTE: Intel driver won't output full RGB on external monitor: https://wiki.archlinux.org/index.php/Intel_graphics#Weathered_colors_(color_range_problems)
# Caution: external-displayrc and internal-displayrc both define same set of variables

# # Read configuration
# if [ -f ~/.config/hardware/gpurc ]; then
#     source ~/.config/hardware/gpurc
# else
#     exit 1
# fi
# if [ -f ~/.config/hardware/external-displayrc ]; then
# 	source ~/.config/hardware/external-displayrc
# else
#     # If no multi-monitor setup, no need to change xrandr configuration
#     exit 1
# fi

# # Assemble xrandr command
# if xrandr | grep "\<$interface\> connected"; then
#     # External display connected
#     cmd="xrandr --output $interface --mode $resolution --scale $scale --rate $refresh_rate"
# 	  if [ -f ~/.config/hardware/internal-displayrc ]; then
# 		source ~/.config/hardware/internal-displayrc
#         if [ ! -z $interface ]; then
# 			cmd="$cmd --output $interface --off"
#         fi
# 	  fi
# 	  if [ $isIntelGpu = true ]; then
#         cmd="$cmd --set \"Broadcast RGB\" \"Full\""
#     fi
# else
#     # External display not connected, only internal display connected
# 	  if [ ! -f ~/.config/hardware/internal-displayrc ]; then
#         # External display not connected , no internal display configuration
#         exit 1
#     fi
#     source ~/.config/hardware/internal-displayrc
#     if [ -z $interface ]; then
#         cmd="xrandr --output $interface --mode $resolution --scale $scale"
#     fi
# fi

