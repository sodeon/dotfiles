# i3 config file (v4)
#
# ,: used for chaining commands using the previous matching window
# ;: usef for chaining commands without using the previous matcheing window
#
# Mod1   : alt
# Mod3   : Hyper
# Mod4   : Windows
# Mod5   : Mode_switch (Wrong! Mod5 is not recognized. Use Mode_switch directly)
# Control: ctrl
# Shift  : shift
#--------------------------------------------------------------------------------
# Looks
#--------------------------------------------------------------------------------
# Make title bar a very slim line by setting font size to 0
font pango:Ubuntu 0

set $bg-color            #444444
set $inactive-bg-color   #000000
set $text-color          #f3f4f5
set $inactive-text-color #676e7d
set $urgent-bg-color     #e53935
set $indicator-color     #000000

# Window colors
#                       Border             Background         Text                 Indicator
client.focused          $bg-color          $bg-color          $text-color          $indicator-color
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator-color
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator-color
client.urgent           $urgent-bg-color   $urgent-bg-color   $text-color          $indicator-color

# Borders
for_window [class=".*"] border pixel 2
hide_edge_borders both

workspace_auto_back_and_forth yes

# When new window opened, leave full-screen mode (I find I often forgot I am in full screen mode and have no idea why a window won't show up)
popup_during_fullscreen leave_fullscreen

# Bottom bar
bar {
	status_command i3blocks -c $HOME/.config/i3/i3blocks.conf
	font pango:Ubuntu 13
	colors {
		set $bar-bg-color            #2f343f
		set $bar-inactive-bg-color   #000000
		set $bar-text-color          #f3f4f5
		set $bar-inactive-text-color #676e7d
		set $bar-urgent-bg-color     #000000
        set $bar-urgent-text-color   #ff7777

        background #000000
        separator #757575
        #                  border                 background             text
        focused_workspace  $bar-bg-color          $bar-bg-color          $bar-text-color
        inactive_workspace $bar-inactive-bg-color $bar-inactive-bg-color $bar-inactive-text-color
        urgent_workspace   $bar-urgent-bg-color   $bar-urgent-bg-color   $bar-urgent-text-color
	}

    strip_workspace_numbers yes
	position top
}


#--------------------------------------------------------------------------------
# Modifiers
#--------------------------------------------------------------------------------
set $mod Mod1
set $mode Mode_switch
floating_modifier $mod


#--------------------------------------------------------------------------------
# Hotkeys (i3 related)
#--------------------------------------------------------------------------------
# Restart i3 config
bindsym $mod+Shift+r restart

# Lock/logout
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Do you want to logout?' -B 'Yes, logout' 'i3-msg exit'"


#--------------------------------------------------------------------------------
# Typing assist
#--------------------------------------------------------------------------------
# $mode+p/u: delete word/line (delete line only functional for terminal and vim)
bindsym $mode+p exec --no-startup-id autohotkey deleteWord
bindsym $mode+u exec --no-startup-id autohotkey deleteLine

# $mode+n/.: move back/forward a word
# There is a bug in xdotool that Mode_switch+n will results in ctrl+h (ctrl+left then left inverse to h from xmodmap settings)
bindsym $mode+n            exec --no-startup-id xte 'keyup n' 'keydown Control_L' 'key Left'  'keyup Control_L'
bindsym $mode+Shift+n      exec --no-startup-id xte 'keyup n' 'keydown Control_L' 'key Left'  'keyup Control_L'
bindsym $mode+period       exec --no-startup-id xte 'keyup period' 'keydown Control_L' 'key Right' 'keyup Control_L'
bindsym $mode+Shift+period exec --no-startup-id xte 'keyup period' 'keydown Control_L' 'key Right' 'keyup Control_L'

# Shift focus from omnibar (e.g. Chrome)
bindsym $mode+Tab exec --no-startup-id xte 'keyup Tab' 'keydown Shift_L' 'key F6' 'keyup Shift_L'


#--------------------------------------------------------------------------------
# PrintScreen and XF86 keys (volume, monitor brightness and media control)
#--------------------------------------------------------------------------------
# Screenshot
bindsym Print      exec flameshot full -p $HOME/Pictures
bindsym ctrl+Print exec flameshot gui  -p $HOME/Pictures
# bindsym Shift+Print exec flameshot screen -p $HOME/Pictures # only produces white images

# Monitor brightness
bindsym XF86MonBrightnessDown exec --no-startup-id monitor-control bd | xargs -i notify-send.sh -t 2400 -r 22 -u low {} Brightness && pkill -RTMIN+11 i3blocks
bindsym XF86MonBrightnessUp   exec --no-startup-id monitor-control bu | xargs -i notify-send.sh -t 2400 -r 22 -u low {} Brightness && pkill -RTMIN+11 i3blocks
bindsym $mod+$mode+F1         exec --no-startup-id monitor-control bd | xargs -i notify-send.sh -t 2400 -r 22 -u low {} Brightness && pkill -RTMIN+11 i3blocks
bindsym $mod+$mode+F2         exec --no-startup-id monitor-control bu | xargs -i notify-send.sh -t 2400 -r 22 -u low {} Brightness && pkill -RTMIN+11 i3blocks
bindsym $mod+$mode+grave      exec --no-startup-id monitor-control bs | xargs -i notify-send.sh -t 2400 -r 22 -u low {} Brightness && pkill -RTMIN+11 i3blocks

# Media
bindsym XF86AudioPlay    exec --no-startup-id autohotkey pause
bindsym XF86AudioPause   exec --no-startup-id autohotkey pause
bindsym XF86AudioNext    exec --no-startup-id autohotkey nextTrack
bindsym XF86AudioPrev    exec --no-startup-id autohotkey prevTrack
bindsym $mod+$mode+space exec --no-startup-id autohotkey pause
bindsym $mod+$mode+Right exec --no-startup-id autohotkey nextTrack
bindsym $mod+$mode+Left  exec --no-startup-id autohotkey prevTrack
# bindsym $mod+$mode+Next [class="^mpv"] exec --no-startup-id autohotkey mediaPlayerFullscreen

# Volume
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse set Master 5%-    && pkill -RTMIN+10 i3blocks && notify-send.sh -t 2400 -r 21 -u low `pulsemixer --get-volume | sed -r 's/\s+.*$//'` Volume
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse set Master 5%+    && pkill -RTMIN+10 i3blocks && notify-send.sh -t 2400 -r 21 -u low `pulsemixer --get-volume | sed -r 's/\s+.*$//'` Volume
bindsym XF86AudioMute        exec --no-startup-id amixer -D pulse set Master toggle && pkill -RTMIN+10 i3blocks && notify-send.sh -t 2400 -r 21 -u low `pulsemixer --get-volume | sed -r 's/\s+.*$//'` Volume
bindsym $mode+F1             exec --no-startup-id amixer -D pulse set Master 5%-    && pkill -RTMIN+10 i3blocks && notify-send.sh -t 2400 -r 21 -u low `pulsemixer --get-volume | sed -r 's/\s+.*$//'` Volume
bindsym $mode+F2             exec --no-startup-id amixer -D pulse set Master 5%+    && pkill -RTMIN+10 i3blocks && notify-send.sh -t 2400 -r 21 -u low `pulsemixer --get-volume | sed -r 's/\s+.*$//'` Volume
bindsym $mode+grave          exec --no-startup-id switch-sound-output && pkill -RTMIN+10 i3blocks

# Laptop
bindsym           XF86Display        exec --no-startup-id set-display-monitor
bindsym --release XF86ScreenSaver    exec --no-startup-id xset dpms force off
bindsym           XF86TouchpadToggle exec --no-startup-id toggle-touchpad


#--------------------------------------------------------------------------------
# App launcher
#--------------------------------------------------------------------------------
# Not directly typed, but used by xcape binding
set_from_resource $rofiCombiWidth i3wm.rofi.combi.width
# Use Super as modifier to workaround a xdotool/xte and xcape compatibility problem.
#     If using mod+F12, mod+h/j/k/l followed by mod4/super will result in the alt key triggerd by mod4(xcape) missing
bindsym mod4+F12 exec rofi -show combi  -lines 5 -width $rofiCombiWidth -sidebar-mode 


#--------------------------------------------------------------------------------
# Window management
#--------------------------------------------------------------------------------
# Kill focused window
bindsym $mod+grave kill

# Change focus (with vim integration)
bindsym $mod+h exec --no-startup-id autohotkey focusWindow left
bindsym $mod+j exec --no-startup-id autohotkey focusWindow down
bindsym $mod+k exec --no-startup-id autohotkey focusWindow up
bindsym $mod+l exec --no-startup-id autohotkey focusWindow right

# Move focused window (Disable vim/i3/tmux integration. All these have different window movement mechanisms. Behavior after integration is just wierd and inconsistent.)
set_from_resource $floatingDeltaX i3wm.floating.deltaX 64px
set_from_resource $floatingDeltaY i3wm.floating.deltaY 64px
bindsym $mod+Shift+h move left  $floatingDeltaX
bindsym $mod+Shift+j move down  $floatingDeltaY
bindsym $mod+Shift+k move up    $floatingDeltaY
bindsym $mod+Shift+l move right $floatingDeltaX

# Resize window
set_from_resource $resizeX i3wm.resizeX 10px or 7ppt
set_from_resource $resizeY i3wm.resizeY 10px or 7ppt
bindsym $mod+Control+h exec --no-startup-id autohotkey resizeWindow shrink width  $resizeX
bindsym $mod+Control+k exec --no-startup-id autohotkey resizeWindow grow   height $resizeY
bindsym $mod+Control+j exec --no-startup-id autohotkey resizeWindow shrink height $resizeY
bindsym $mod+Control+l exec --no-startup-id autohotkey resizeWindow grow   width  $resizeX

# Make window a horizontal split container
# bindsym $mod+s split v
# Make window a vertical split container
# bindsym $mod+v split h

# Full screen (maximize)
bindsym $mod+f exec --no-startup-id autohotkey toggleFullscreen
# Change container layout (stacked, tabbed, toggle split). For my workflow, I only use split and stacked.
bindsym $mod+a layout toggle split
bindsym $mod+s layout stacked
bindsym $mod+d layout tabbed
# Equal width/height
bindsym $mod+equal resize set width 50ppt, resize set height 50ppt

# Floating
bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle
# bindsym $mod+space focus mode_toggle; exec --no-startup-id autohotkey floatingToggled

# Snap floating window position
bindsym Mod4+h exec --no-startup-id "snap-window left ; i3-msg 'focus mode_toggle'; snap-window left ; i3-msg 'focus mode_toggle'"
bindsym Mod4+j exec --no-startup-id "snap-window down ; i3-msg 'focus mode_toggle'; snap-window down ; i3-msg 'focus mode_toggle'"
bindsym Mod4+k exec --no-startup-id "snap-window up   ; i3-msg 'focus mode_toggle'; snap-window up   ; i3-msg 'focus mode_toggle'"
bindsym Mod4+l exec --no-startup-id "snap-window right; i3-msg 'focus mode_toggle'; snap-window right; i3-msg 'focus mode_toggle'"
# Legacy: Toggle floating window between bottom left and right (use snap floating window function instead)
# bindsym Mod4+slash exec --no-startup-id "toggle-window-snap-position; i3-msg 'focus mode_toggle'; toggle-window-snap-position; i3-msg 'focus mode_toggle'"

# parent/child
bindsym $mod+p focus parent
bindsym $mod+c focus child

# TODO: mark/unmark window


#--------------------------------------------------------------------------------
# Workspace management
#--------------------------------------------------------------------------------
# Add a little spacing around the name for less cluter viewing experiences
set $ws1  "1: Web "
set $ws2  "2: Term "
set $ws3  "3: File "
set $ws4  "4: Code "
set $ws5  "5: 5 "
set $ws6  "6: 6 "
set $ws7  "7: 7 "
set $ws8  "8: 8 "
set $ws9  "9: Viewer "
set $ws10 "10: G "

# Switch to workspace
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+1   exec autohotkey F1 
bindsym $mod+2   exec autohotkey F2
bindsym $mod+3   exec autohotkey F3
bindsym $mod+4   workspace number $ws4
bindsym $mod+5   workspace number $ws5
bindsym $mod+6   workspace number $ws6
bindsym $mod+7   workspace number $ws7
bindsym $mod+8   workspace number $ws8
bindsym $mod+9   workspace number $ws9
bindsym $mod+0   exec autohotkey F10

# Move focused container to workspace
bindsym $mod+Shift+1  move container to workspace number $ws1
bindsym $mod+Shift+2  move container to workspace number $ws2
bindsym $mod+Shift+3  move container to workspace number $ws3
bindsym $mod+Shift+4  move container to workspace number $ws4
bindsym $mod+Shift+5  move container to workspace number $ws5
bindsym $mod+Shift+6  move container to workspace number $ws6
bindsym $mod+Shift+7  move container to workspace number $ws7
bindsym $mod+Shift+8  move container to workspace number $ws8
bindsym $mod+Shift+9  move container to workspace number $ws9
bindsym $mod+Shift+0  move container to workspace number $ws10

# Scratchpad
bindsym $mod+Shift+s move scratchpad
bindsym $mod+comma scratchpad show


#--------------------------------------------------------------------------------
# Application window/workspace settings
#--------------------------------------------------------------------------------
# Terminal
set $term urxvtc
bindsym $mod+Return exec $term -cd $(xcwd)

# Bind application to workspace
assign [title="ranger"       ] $ws3
assign [class="Code"         ] $ws4
assign [class="Sxiv"         ] $ws9
assign [class="Zathura"      ] $ws9
assign [title="^LibreOffice "] $ws9 # LibreOffice has compatibility issues with "class/instance". Adding a space in the end will let splash screen shown in calling workspace
assign [class="Lutris"       ] $ws10
assign [class="Steam"        ] $ws10

for_window [class="URxvt" title="ranger"] border pixel 2, focus
for_window [class="Google-chrome"       ] border none
for_window [class="Firefox"             ] border none
for_window [class="Org.gnome.Nautilus"  ] border none
for_window [class="Code"                ] border none,    focus
for_window [class="Zathura"             ] border none,    focus
for_window [class="Sxiv"                ] border none,    focus, fullscreen
for_window [title="^LibreOffice "       ] border none,    focus
for_window [class="Lutris"              ] border none,    focus
for_window [class="Steam"               ] border none,    focus
for_window [class="qBittorrent"         ]                        floating enable, move center


#--------------------------------------------------------------------------------
# Floating application
#--------------------------------------------------------------------------------
# Notebook and cmus uses lazy execution (won't execute until first accessing)
bindsym $mod+n exec i3-floating-singleton tmux "Notebook"
bindsym $mod+m exec i3-floating-singleton cmus "Music Player"
bindsym $mod+Shift+m [class="^mpv"] scratchpad show
# bindsym $mod+Shift+m [class="^mpv"] scratchpad show, fullscreen enable

set_from_resource $tmuxSize i3wm.tmux.size 60 ppt 70 ppt
set_from_resource $cmusSize i3wm.cmus.size 80 ppt 80 ppt
for_window [instance="^tmux$"] border pixel 3, floating enable, resize set $tmuxSize, move scratchpad
for_window [instance="^cmus$"] border pixel 0, floating enable, resize set $cmusSize, move scratchpad
for_window [class="mpv"      ] border pixel 8, floating enable, sticky enable       , move scratchpad, scratchpad show


#--------------------------------------------------------------------------------
# Gaps (i3-gaps is a fork from i3)
#     Pixel size: displayWidth / scaleFactor (1.25 on desktop)
#--------------------------------------------------------------------------------
smart_gaps inverse_outer # When there is only one window, disable gaps
smart_borders on # Only has border when there are multiple windows

set_from_resource $ws1HGap  i3wm.ws1.horizontalGap  0
set_from_resource $ws2HGap  i3wm.ws2.horizontalGap  0
set_from_resource $ws3HGap  i3wm.ws3.horizontalGap  0
set_from_resource $ws4HGap  i3wm.ws4.horizontalGap  0
set_from_resource $ws5HGap  i3wm.ws5.horizontalGap  0
set_from_resource $ws6HGap  i3wm.ws6.horizontalGap  0
set_from_resource $ws7HGap  i3wm.ws7.horizontalGap  0
set_from_resource $ws8HGap  i3wm.ws8.horizontalGap  0
set_from_resource $ws9HGap  i3wm.ws9.horizontalGap  0
set_from_resource $ws10HGap i3wm.ws10.horizontalGap 0

set_from_resource $ws1VGap  i3wm.ws1.verticalGap  0
set_from_resource $ws2VGap  i3wm.ws2.verticalGap  0
set_from_resource $ws3VGap  i3wm.ws3.verticalGap  0
set_from_resource $ws4VGap  i3wm.ws4.verticalGap  0
set_from_resource $ws5VGap  i3wm.ws5.verticalGap  0
set_from_resource $ws6VGap  i3wm.ws6.verticalGap  0
set_from_resource $ws7VGap  i3wm.ws7.verticalGap  0
set_from_resource $ws8VGap  i3wm.ws8.verticalGap  0
set_from_resource $ws9VGap  i3wm.ws9.verticalGap  0
set_from_resource $ws10VGap i3wm.ws10.verticalGap 0

workspace $ws1  gaps horizontal $ws1HGap
workspace $ws2  gaps horizontal $ws2HGap
workspace $ws3  gaps horizontal $ws3HGap
workspace $ws4  gaps horizontal $ws4HGap
workspace $ws5  gaps horizontal $ws5HGap
workspace $ws6  gaps horizontal $ws6HGap
workspace $ws7  gaps horizontal $ws7HGap
workspace $ws8  gaps horizontal $ws8HGap
workspace $ws9  gaps horizontal $ws9HGap
workspace $ws10 gaps horizontal $ws10HGap

workspace $ws1  gaps vertical $ws1VGap
workspace $ws2  gaps vertical $ws2VGap
workspace $ws3  gaps vertical $ws3VGap
workspace $ws4  gaps vertical $ws4VGap
workspace $ws5  gaps vertical $ws5VGap
workspace $ws6  gaps vertical $ws6VGap
workspace $ws7  gaps vertical $ws7VGap
workspace $ws8  gaps vertical $ws8VGap
workspace $ws9  gaps vertical $ws9VGap
workspace $ws10 gaps vertical $ws10VGap

# Gap size
set_from_resource $toggleHGap i3wm.toggleHGap 0
bindsym $mod+r gaps horizontal current toggle $toggleHGap

set_from_resource $hGapStep i3wm.horizontalGapStep 32
set_from_resource $vGapStep i3wm.verticalGapStep   32
bindsym $mod+control+shift+h gaps horizontal current plus  $hGapStep
bindsym $mod+control+shift+l gaps horizontal current minus $hGapStep
bindsym $mod+control+shift+j gaps vertical   current plus  $vGapStep
bindsym $mod+control+shift+k gaps vertical   current minus $vGapStep


#--------------------------------------------------------------------------------
# Dummy keybidndings/modes (not used directly but used by other apps)
#--------------------------------------------------------------------------------
# Dummy mode that will not grab keys
mode " " {
	bindsym Escape mode "default"
}


#--------------------------------------------------------------------------------
# Startup scripts
# NOTE: Non-i3 specific commands moved to ~/.profile
#--------------------------------------------------------------------------------
#
# Startup programs
#
exec i3-msg 'workspace $ws2; exec $term'

#
# System config and daemons
#
# Black background
exec --no-startup-id xsetroot -solid "#000000"
# Let status bar show window title. When i3 reload, i3-msg subscribe process be will automatically terminated.
exec_always --no-startup-id i3-watch-window

#
# Hardware control
#
# Auto-hide cursor
exec --no-startup-id unclutter
# Workaround brightness value cannot be read until several seconds after booting
exec --no-startup-id sleep 5 && pkill -RTMIN+11 i3blocks
# If in .profile, it sometimes won't work correctly
exec --no-startup-id activate-hotkeys
# Disable bluetooth (In Ubuntu, bluetooth is automatically enabled after boot)
set_from_resource $bluetoothEnable i3wm.hardware.bluetoothEnable
exec --no-startup-id [ $bluetoothEnable = "false" ] && toggle-bluetooth disable
