# Reload tmux config: <C-e>r
#----------------------------------------------------------------------------------------------------------------------
# Keyboard/mouse control configuration
#----------------------------------------------------------------------------------------------------------------------
# set -g default-terminal 'xterm-256color'
# set -g default-terminal 'screen-256color'
set -g default-terminal 'tmux-256color'
set -g terminal-overrides ",*256col*:Tc" # Enable true color: https://github.com/tmux/tmux/issues/1246
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # Override cursor shape handling to support urxvt (https://github.com/neovim/neovim/issues/5096)

# Enable ctrl-left/right to move cursor across word
set -g xterm-keys on

# Use ctrl-e as activation key
unbind C-b
set -g prefix C-e

# Send focus event to app. E.g. VIM uses focus event to determine if a file has changed
set -g focus-events on

# When pane has update, highlight in status line
set -g monitor-activity on

# Use status line pane title for terminal title
# set -g set-titles on
# set -g set-titles-string "#I:#W"

# Vim-like copy mode ([)
setw -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -Tcopy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -Tcopy-mode-vi 'Escape' send -X cancel
# bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send -X begin-selection # compatible from 2.4
bind p paste-buffer

# Vim-like pane switching and moving
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r H swap-pane -U
bind -r K swap-pane -U
bind -r L swap-pane -D
bind -r J swap-pane -D
bind C-e  select-pane -t :.+ # go to next pane

# Pane navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h run "($is_vim && tmux send-keys M-h) || vim-tmux-i3-integration focus left"
bind -n M-j run "($is_vim && tmux send-keys M-j) || vim-tmux-i3-integration focus down"
bind -n M-k run "($is_vim && tmux send-keys M-k) || vim-tmux-i3-integration focus up"
bind -n M-l run "($is_vim && tmux send-keys M-l) || vim-tmux-i3-integration focus right"

# Pane resizing
bind -n M-C-h run "($is_vim && tmux send-keys M-C-h) || vim-tmux-i3-integration resize shrink width"
bind -n M-C-j run "($is_vim && tmux send-keys M-C-j) || vim-tmux-i3-integration resize shrink height"
bind -n M-C-k run "($is_vim && tmux send-keys M-C-k) || vim-tmux-i3-integration resize grow   height"
bind -n M-C-l run "($is_vim && tmux send-keys M-C-l) || vim-tmux-i3-integration resize grow   width"
# note: you can use <C-o> rotate pane
bind    = select-layout even-horizontal # restore maximized

# Vim-like pane splitting
bind -r v split-window -h -c "#{pane_current_path}" # vertical split, "vs" in vim
bind -r s split-window    -c "#{pane_current_path}" # horizontal split, "sp" in vim

# Tab switching
bind -r t   new-window -c "#{pane_current_path}"
bind -n M-q previous-window
bind -n M-w next-window
bind -n M-e run "(tmux display-message -p '#{pane_current_command}' | grep -q '^vim$' && tmux send-keys q) || tmux kill-pane"
bind -n M-Q swap-window -t -1
bind -n M-W swap-window -t +1

# page up is "page up". No prefix or anything required. Caveat: pageup cannot be used in other programs
bind -n Pageup copy-mode -ue # Pageup goes to copy mode directly, -e means when scrolled down to bottom, exit copy mode

# start window numbers at 1 to match keyboard order with tmux window order
set  -g base-index 1
setw -g pane-base-index 1
# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Rename window
bind -r A command-prompt -I "#W" "rename-window %%"

# Reload tmux config
bind r source-file ~/.tmux.conf \; display ".tmux.conf loaded"

# Mouse/keyboard
set -g -q mouse on
set -sg escape-time 0 # tmux will delay escape key registration for 500ms. This remove that.


#----------------------------------------------------------------------------------------------------------------------
# App compatibility config
#----------------------------------------------------------------------------------------------------------------------
# If inside vim, allow tab switching
bind -n C-Pageup   run "tmux display-message -p '#{pane_current_command}' | grep -q '^vim$' && tmux send-keys gT"
# For whatever reason, C-Pageup cannot be passed to vim
bind -n C-Pagedown run "tmux display-message -p '#{pane_current_command}' | grep -q '^vim$' && tmux send-keys gt"


#----------------------------------------------------------------------------------------------------------------------
# Looks
#----------------------------------------------------------------------------------------------------------------------
set -g status-interval 0 # update status every 20s

set -g status-position top
set -g status-justify centre
set -g status-bg black
set -g status-fg colour240

# set -g pane-border-fg colour235
# set -g pane-active-border-fg colour240
set -g pane-border-fg black
set -g pane-active-border-fg black

# Remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# Windows desktop
# set -g status-right " #(date '+%d  #[fg=colour123] %H:%M')"  # 24 hour time
# Windows laptop
#set -g status-right " #(WMIC.exe Path Win32_Battery Get EstimatedChargeRemaining | grep '^[0-9]' | sed -e 's/ //g')%   #(date '+%d  #[fg=colour123] %I:%M')"

# set -g status-right "#[fg=colour130]#([ #{window_panes} -eq 1 ] || echo "")#[fg=colour240]   #{mem_percentage}%   #(WMIC.exe Path Win32_Battery Get EstimatedChargeRemaining | grep '^[0-9]' | sed -e 's/ //g')%   #(date '+%d  #[fg=colour123] %I:%M')"
#set -g status-right " #{mem_percentage}%   #(date '+%m/%d  #[fg=colour123] %I:%M')"
#set -g status-right "#{cpu_fg_color}#{cpu_percentage}  #[fg=colour240] #{mem_percentage}%   #(date '+%m/%d  #[fg=colour123] %I:%M')"

set -g window-status-format '#W '
set -g window-status-current-format '#[fg=colour252,bg=colour0]#W '
set -g window-status-separator ' '

# Hide status bar when there is only one tab
if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
set-hook -g window-linked   'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'


#----------------------------------------------------------------------------------------------------------------------
# Plugins and its settings
#----------------------------------------------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-dir '~/.tmux-resurrect'
# set -g @resurrect-save 'C-t'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-boot    'off'     # do not run tmux when computer boots
set -g @continuum-restore 'off'     # restore tmux when opening terminal
set -g @continuum-save-interval '0' # do not save settings

set -g @plugin 'tmux-plugins/tmux-yank' # Add system clipboard support for tmux-fingers
set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-key y # yank
set -g @fingers-compact-hints 0
set -g @fingers-hint-position-nocompact "left"
set -g @fingers-hint-format-nocompact "#[fg=yellow,bold]%s"
# set -g @plugin 'jbnicolai/tmux-fpp'
# set -g @fpp-key 'f'

# Keep this line at the very bottom of .tmux.conf
run '~/.tmux/plugins/tpm/tpm'
